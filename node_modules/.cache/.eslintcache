[{"/home/fatima/Xero-react/src/index.js":"1","/home/fatima/Xero-react/src/App.js":"2"},{"size":182,"mtime":1695818650729,"results":"3","hashOfConfig":"4"},{"size":4560,"mtime":1696245456951,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dsu9p1",{"filePath":"9","messages":"10","suppressedMessages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"/home/fatima/Xero-react/src/index.js",[],[],"/home/fatima/Xero-react/src/App.js",["13"],[],"import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios'\nimport mondaySdk from \"monday-sdk-js\";\n\n\n// Usage of mondaySDK example, for more information visit here: https://developer.monday.com/apps/docs/introduction-to-the-sdk/\nconst monday = mondaySdk();\n\nconst App = () => {\n  const [context, setContext] = useState();\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [invoices, setInvoices] = useState({});\n  const [clientId, setClientId] = useState('');\n  const [clientSecret, setClientSecret] = useState('');\n  const [redirectUri, setRedirectUri] = useState('');\n\n  useEffect(() => {\n    // Notice this method notifies the monday platform that user gains a first value in an app.\n    // Read more about it here: https://developer.monday.com/apps/docs/mondayexecute#value-created-for-user/\n    monday.execute(\"valueCreatedForUser\");\n\n    // TODO: set up event listeners, Here`s an example, read more here: https://developer.monday.com/apps/docs/mondaylisten/\n    monday.listen(\"context\", (res) => {\n      setContext(res.data);\n    });\n  }, []);\n\n  const fetchInvoices = () => {\n    axios.get('https://i9j279set4.execute-api.us-east-1.amazonaws.com/prod/invoice')\n      .then(response => {\n        const fetchedInvoices = response.data;\n        setInvoices(fetchedInvoices.invoices);\n      })\n      .catch(error => {\n        console.error('Error fetching invoices:', error);\n      });\n  };\n\n  const handleAuthorizeClick = () => {\n    const frontendHost = window.location.origin;\n    // Construct the authorization URL with user-provided credentials\n    const authorizationUrl = `https://i9j279set4.execute-api.us-east-1.amazonaws.com/prod/connect?clientId=${encodeURIComponent(clientId)}&clientSecret=${encodeURIComponent(clientSecret)}&redirectUri=${encodeURIComponent(redirectUri)}&frontendHost=${encodeURIComponent(frontendHost)}`;\n\n    // Redirect the user to the authorization URL\n    window.location.href = authorizationUrl;\n  };\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const authorized = urlParams.get('authorized');\n\n    if (authorized === 'true') {\n      setIsAuthorized(true);\n    }\n  }, []);\n\n\n \n\n \n  return (\n    <div className=\"container text-center mb-5 mt-5\">\n\n      {!isAuthorized ? (\n        <div class=\"mb-5\">\n          <h2 class=\"mb-5\">Enter Your Xero API Credentials</h2>\n\n          <div class=\"input-group mb-3 shadow\">\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Client Id</span>\n            <input\n              type=\"text\"\n              value={clientId}\n              onChange={(e) => setClientId(e.target.value)}\n              class=\"form-control \"\n\n            />\n          </div>\n          <div class=\"input-group mb-3 shadow\">\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Client Secret</span>\n            <input\n              type=\"text\"\n              value={clientSecret}\n              onChange={(e) => setClientSecret(e.target.value)}\n              class=\"form-control \"\n\n            />\n          </div>\n          <div class=\"input-group mb-3 shadow\">\n            <span class=\"input-group-text\" id=\"inputGroup-sizing-default\">Redirect Uri</span>\n            <input\n              type=\"text\"\n              value={redirectUri}\n              onChange={(e) => setRedirectUri(e.target.value)}\n              class=\"form-control \"\n\n            />\n          </div>\n          <button onClick={handleAuthorizeClick} class=\"btn btn-outline-dark btn-lg\">Submit</button>\n        </div>\n      ) : (\n        <div>\n          <button className=\"btn btn-dark btn-lg mb-3\" onClick={fetchInvoices}>\n            Fetch Invoices\n          </button>\n          <div className=\"table-responsive\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th>Invoice Number</th>\n                  <th>Amount Due</th>\n                  <th>Reference</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n                {Object.keys(invoices).map(key => (\n                  <tr key={key}>\n                    <td>{invoices[key].invoiceNumber}</td>\n                    <td>{invoices[key].amountDue}</td>\n                    <td>{invoices[key].reference}</td>\n                    <td>{invoices[key].status}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n",{"ruleId":"14","severity":1,"message":"15","line":11,"column":10,"nodeType":"16","messageId":"17","endLine":11,"endColumn":17},"no-unused-vars","'context' is assigned a value but never used.","Identifier","unusedVar"]